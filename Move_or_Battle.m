function [TerritoryMatrix, MilitaryMatrix, map_coloured, OccupyMatrix, AllMilitraryUnits, MilitaryMatrixX, Ai_MilitaryMatrix2, Ai_MilitaryMatrix3, Ai_MilitaryMatrix1] = Move_or_Battle (Movement, TerritoryMatrix, MilitaryMatrix, i, PositionMatrix, nation, map_coloured, NameMatrix, OccupyMatrix, AllMilitraryUnits, MilitaryMatrixX, Ai_MilitaryMatrix2, Ai_MilitaryMatrix3, Ai_MilitaryMatrix1)
%A function that generates the "in-game" graphics for when the units are
%moved by the player or ai, it also deals with batteling as to make the
%controls easier.
Unit_Health = str2num(MilitaryMatrix(i,2));
%Unit_Name = MilitaryMatrix(i,5); unused
Unit_Type = MilitaryMatrix(i,1);
RandomAttack = 420; %Error testing
RandomDefeat = 420;%Error testing
Unit_local_matrix = strcmp(MilitaryMatrix(i,3),PositionMatrix);
if nation == 1
    FL = 2;
    FJ = 3;
    FK = 4;
elseif nation == 2
    FL = 1;
    FJ = 3;
    FK = 4;
elseif nation == 3
    FL = 1;
    FJ = 2;
    FK = 4;
elseif nation == 4
    FL = 1;
    FJ = 2;
    FK = 3;
end
water = 0;
for kk = 1:29
    for ll = 1:23
      if Unit_local_matrix(kk,ll) ~= 0
          number = kk;
          colth = ll;
          break
      end
    end
end
colour = [];
switch (nation)
    case 1
       colour = [0.8,0,0.4]; 
    case 2
        colour = [0.8,0,0.8];
    case 3
        colour = [1,1,0.2];
    case 4
        colour = [0,1,1];
end
black = [0,0,0];
grey = [0.7843137255,0.7843137255,0.7843137255];
green = [0,0.6,0];
blue = [0,0.2980392157,0.6];
brown = [0.466666666667,0.3254901961,0.1647058824];
red = [1,0,0];
  switch Movement
      case {'w', 'W', 'Up', 'UP', 'up'}
          switch (MilitaryMatrix(i,3))
              case {"1A" "2B" "1C" "2D" "1E" "2F" "1G" "2H" "1I" "2J" "1K" "2L" "1M" "2N" "1O" "2P" "1Q" "2R" "1S" "2T" "1U" "2V" "1W"}
              fprintf('Invalid movement entry so movement wasted.\n');
              otherwise
              switch (OccupyMatrix((number-2),colth))
              case {nation}
                fprintf('Invalid movement entry so movement wasted, tile occupied.\n');
                return;
              case {FL,FK,FJ} 
                  for helpme = 1:size(AllMilitraryUnits,1)
                      if PositionMatrix((number-2),(colth)) == AllMilitraryUnits(helpme,3)
                        switch AllMilitraryUnits(helpme,1)
                            case "Soldier"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*23)+1;
                                    RandomDefeat = round(rand*5);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-2),(colth)) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end   
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*14)+2;
                                    RandomDefeat = round(rand*7);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-2),(colth)) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*19)+1;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-2),(colth)) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                               %If the enemy unit dies, remove it
                                    %health of attacked unit
                                    if true(HealthDefender <= 75 && HealthDefender > 50)
                                     if mod((number-2),2) == 0
                                       map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 25) 
                                     if mod((number-2),2) == 0
                                       map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 25 && HealthDefender > 0)
                                     if mod((number-2),2) == 0
                                       map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number-2),2) == 0
                                      map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number-2) - (((number-2)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number-2) - (((number-2)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number-2) - (((number-2)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number-2) - (((number-2)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Cannon"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*6)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-2),(colth)) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*15)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-2),(colth)) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*14)+5;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-2),(colth)) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %If the enemy unit dies, remove it
                                    %Health of attacked unit
                                    if true(HealthDefender <= 56 && HealthDefender > 38)
                                     if mod((number-2),2) == 0
                                       map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 38 && HealthDefender > 19) 
                                     if mod((number-2),2) == 0
                                       map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 19 && HealthDefender > 0)
                                     if mod((number-2),2) == 0
                                       map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number-2),2) == 0
                                      map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number-2) - (((number-2)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number-2) - (((number-2)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number-2) - (((number-2)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number-2) - (((number-2)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Tank"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*20)+10;
                                    RandomDefeat = round(rand*10);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-2),(colth)) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*30)+12;
                                    RandomDefeat = round(rand*12);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-2),(colth)) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*20)+5;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-2),(colth)) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-2),(colth)) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %Health of attacked unit
                                if true(HealthDefender <= 150 && HealthDefender > 100)
                                     if mod((number-2),2) == 0
                                       map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 100 && HealthDefender > 50) 
                                     if mod((number-2),2) == 0
                                       map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 0)
                                     if mod((number-2),2) == 0
                                       map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number-2),2) == 0
                                      map_coloured((29 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number-2) - (((number-2)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number-2) - (((number-2)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number-2) - (((number-2)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number-2) - (((number-2)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number-2) - (((number-2)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number-2) - (((number-2)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number-2) - (((number-2)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number-2) - (((number-2)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                end
                        end
                        break;
                      end
                  end
                  fprintf('\nUnit attacked in %s, %d damaged given and %d damage taken.\n',PositionMatrix((number-2),(colth)), RandomAttack, RandomDefeat)
                  TerritoryMatrix = TerritoryMatrix;
                  OccupyMatrix = OccupyMatrix;
               return;   
              otherwise
              end
              NewRow = (number - 2);
              NewCol = colth;
              MilitaryMatrix(i,3) = PositionMatrix(NewRow,colth);
              PrevWater = 1;
              OccupyMatrix(number,colth) = 0;
              OccupyMatrix(NewRow,colth) = nation;
              if ~isnan(TerritoryMatrix(number,colth))
                  PrevWater = 0;
              end
              if ~isnan(TerritoryMatrix(NewRow,colth))
                TerritoryMatrix(NewRow,colth) = nation;
              else
                  water = 1;
              end
              PrevCity = 0;
              if (NameMatrix(number,colth)) ~= ""
                  PrevCity = 1;
              end
              city = 0;
              if (NameMatrix(NewRow,colth)) ~= ""
                 city = 1;
              end
              if (mod(NewRow,2))== 0
                  %Generate unit sprite
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((21 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):2:(25 + 16*(colth - ((colth/2)+0.5)))),:)= [colour;colour];
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(23 + 16*(colth - ((colth/2)+0.5)))),:)= [colour;colour];  
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((25 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [colour;colour];
                  map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(23 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [black;black;black];
                  map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):6:(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(22 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [colour;colour;colour];
                  map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0)
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(colth - ((colth/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(colth - ((colth/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(26 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(colth - ((colth/2)+0.5))),:)= [black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(colth - ((colth/2)+0.5))),:)= [black;black;black];  
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black];  
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):5:(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((28 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):3:(26 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                        case "Tank"
                          map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((24 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black];
                    end 
                    elseif (water == 0) && (city == 1)
                     %Unit does not show up over city
                end
                %Remove old unit sprite plus some terrain damage
                if (PrevWater == 1)
                  map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue];
                  map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):2:(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(23 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];  
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((25 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured(((21 + 16*(number - ((number/2)+0.5))):(23 + 16*(number - ((number/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [blue;blue;blue];
                  map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):6:(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(22 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue];
                  map_coloured((27 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    map_coloured((23 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((27 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((28 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((20) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 6
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 7
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((27) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 9
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 10
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((28) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 11
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((23) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 12
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((26) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((22+damage) + 16*(number - ((number/2)+0.5))),((23) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((22+damage) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((22+damage) + 16*(number - ((number/2)+0.5))),(((23) + 16*(colth - ((colth/2)+0.5))):((24) + 16*(colth - ((colth/2)+0.5)))),:)= [brown;brown];
                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((20+damage) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((20+damage) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((20+damage) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((20+damage) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured(((20+damage) + 16*(number - ((number/2)+0.5))),(((22) + 16*(colth - ((colth/2)+0.5))):2:((25) + 16*(colth - ((colth/2)+0.5)))),:)= [brown;brown];
                                end
                            end
                    end
                end
              elseif (mod(NewRow,2))== 1
                  %Spawn unit sprites on inbetween tiles
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 33) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 33 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((29 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):2:(33 + 16*(colth - ((colth/2)+1)))),:)= [colour;colour];
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(31 + 16*(colth - ((colth/2)+1)))),:)= [colour;colour];  
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((33 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [colour;colour];
                  map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(31 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [black;black;black];
                  map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(colth - ((colth/2)+1))):6:(35 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(30 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [colour;colour;colour];
                  map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0) 
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(colth - ((colth/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(colth - ((colth/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(34 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(colth - ((colth/2)+1))),:)= [black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(colth - ((colth/2)+1))),:)= [black;black;black];  
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black];  
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):5:(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((36 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):3:(34 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                        case "Tank"
                          map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((32 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black];
                    end
                elseif (water == 0) && (city == 1)
                    %Unit is not displayed over city
                end
                %Remove old unit sprites on inbetween tiles
                if (PrevWater == 1)
                  map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue];
                  map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):2:(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(31 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];  
                  map_coloured((30 + 16*(number - ((number/2)+1))),((33 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured(((29 + 16*(number - ((number/2)+1))):(31 + 16*(number - ((number/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [blue;blue;blue];
                  map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):6:(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(30 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue];
                  map_coloured((35 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    map_coloured((31 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((35 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((36 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((28) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 6
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 7
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((35) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 9
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 10
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((36) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 11
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((31) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 12
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((34) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((30+damage) + 16*(number - ((number/2)+1))),((31) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((30+damage) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((30+damage) + 16*(number - ((number/2)+1))),(((31) + 16*(colth - ((colth/2)+1))):((32) + 16*(colth - ((colth/2)+1)))),:)= [brown;brown];
                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((28+damage) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((28+damage) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((28+damage) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((28+damage) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured(((28+damage) + 16*(number - ((number/2)+1))),(((30) + 16*(colth - ((colth/2)+1))):2:((33) + 16*(colth - ((colth/2)+1)))),:)= [brown;brown];
                                end
                            end
                    end
                end
              end
          end
      case {'q', 'Q'}
          switch (MilitaryMatrix(i,3))
              case {"1A" "3A" "5A" "7A" "9A"  "11A"  "13A"  "15A"  "17A"  "19A" "21A"  "23A"  "25A"  "27A"  "29A" "1C" "1E"  "1G"  "1I"  "1K"  "1M" "1O"  "1Q"  "1S"  "1U" "1W"}
              fprintf('Invalid movement entry so movement wasted.\n');
              otherwise
              switch (OccupyMatrix((number-1),(colth-1)))
              case {nation}
                fprintf('Invalid movement entry so movement wasted, tile occupied.\n');
                return;
              case {FL,FK,FJ} 
                  for helpme = 1:size(AllMilitraryUnits,1)
                      if PositionMatrix((number-1),((colth-1))) == AllMilitraryUnits(helpme,3)
                        switch AllMilitraryUnits(helpme,1)
                            case "Soldier"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*23)+1;
                                    RandomDefeat = round(rand*5);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end   
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*14)+2;
                                    RandomDefeat = round(rand*7);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*19)+1;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                               %If the enemy unit dies, remove it
                                    %health of attacked unit
                                    if true(HealthDefender <= 75 && HealthDefender > 50)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 25) 
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 25 && HealthDefender > 0)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number-1),2) == 0
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Cannon"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*6)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*15)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*14)+5;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %If the enemy unit dies, remove it
                                    %Health of attacked unit
                                    if true(HealthDefender <= 56 && HealthDefender > 38)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 38 && HealthDefender > 19) 
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 19 && HealthDefender > 0)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number-1),2) == 0
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Tank"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*20)+10;
                                    RandomDefeat = round(rand*10);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*30)+12;
                                    RandomDefeat = round(rand*12);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*20)+5;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %Health of attacked unit
                                if true(HealthDefender <= 150 && HealthDefender > 100)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 100 && HealthDefender > 50) 
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 0)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number-1),2) == 0
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                end
                        end
                        break;
                      end
                  end
                  fprintf('\nUnit attacked in %s, %d damaged given and %d damage taken.\n',PositionMatrix((number-1),((colth-1))), RandomAttack, RandomDefeat)
                  TerritoryMatrix = TerritoryMatrix;
                  OccupyMatrix = OccupyMatrix;
               return;   
              otherwise
              end
              NewRow = (number - 1);
              NewCol = (colth - 1);
              MilitaryMatrix(i,3) = PositionMatrix(NewRow,NewCol);
              PrevWater = 1;
              OccupyMatrix((number-1),(colth-1)) = nation;
              OccupyMatrix(number,colth) = 0;
              if ~isnan(TerritoryMatrix(number,colth))
                  PrevWater = 0;
              end
              if ~isnan(TerritoryMatrix(NewRow,NewCol))
                TerritoryMatrix(NewRow,NewCol) = nation;
              else
                  water = 1;
              end
              PrevCity = 0;
              if (NameMatrix(number,colth)) ~= ""
                  PrevCity = 1;
              end
              city = 0;
              if (NameMatrix(NewRow,NewCol)) ~= ""
                 city = 1;
              end
              if (mod(NewRow,2)) == 0
                  %Generate unit sprite
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((21 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):2:(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(23 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];  
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((25 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(23 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];
                  map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):6:(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(22 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour];
                  map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0)
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(26 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):5:(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((28 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):3:(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                        case "Tank"
                          map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((24 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                    end 
                    elseif (water == 0) && (city == 1)
                     %Unit does not show up over city
                end
                %Remove old unit sprite plus some terrain damage
                if (PrevWater == 1)
                  map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue];
                  map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):2:(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(23 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];  
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((25 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured(((21 + 16*(number - ((number/2)+0.5))):(23 + 16*(number - ((number/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [blue;blue;blue];
                  map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):6:(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(22 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue];
                  map_coloured((27 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    map_coloured((23 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((27 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((28 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((20) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 6
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 7
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((27) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 9
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 10
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((28) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 11
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((23) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 12
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((26) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured((((24) + 16*(number - ((number/2)+0.5))):((25) + 16*(number - ((number/2)+0.5)))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured((((23) + 16*(number - ((number/2)+0.5))):2:((26) + 16*(number - ((number/2)+0.5)))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              elseif (mod(NewRow,2))== 1
                  %Spawn unit sprites on inbetween tiles
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 33) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 33 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((29 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):2:(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(31 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];  
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((33 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(31 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];
                  map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):6:(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(30 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour];
                  map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0) 
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(34 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):5:(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((36 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):3:(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                        case "Tank"
                          map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((32 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                    end
                elseif (water == 0) && (city == 1)
                    %Unit is not displayed over city
                end
                %Remove old unit sprites on inbetween tiles
                if (PrevWater == 1)
                  map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue];
                  map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):2:(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(31 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];  
                  map_coloured((30 + 16*(number - ((number/2)+1))),((33 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured(((29 + 16*(number - ((number/2)+1))):(31 + 16*(number - ((number/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [blue;blue;blue];
                  map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):6:(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(30 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue];
                  map_coloured((35 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    map_coloured((31 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((35 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((36 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((28) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 6
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 7
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((35) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 9
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 10
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((36) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 11
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((31) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 12
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((34) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((33) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured((((32) + 16*(number - ((number/2)+1))):((33) + 16*(number - ((number/2)+1)))),((29+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured((((31) + 16*(number - ((number/2)+1))):2:((34) + 16*(number - ((number/2)+1)))),((28+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              end
          end
      case {'e', 'E'}
         switch (MilitaryMatrix(i,3))
              case {"1W"  "3W"  "5W" "7W" "9W" "11W" "13W" "15W" "17W" "19W" "21W" "23W" "25W" "27W"  "29W" "1A"  "1C"  "1E"  "1G"  "1I"  "1K"  "1M"  "1O"  "1Q"  "1S"  "1U"}
              fprintf('Invalid movement entry so movement wasted.\n');
             otherwise
              switch (OccupyMatrix((number-1),(colth+1)))
              case {nation}
                fprintf('Invalid movement entry so movement wasted, tile occupied.\n');
                return;
              case {FL,FK,FJ} 
                  for helpme = 1:size(AllMilitraryUnits,1)
                      if PositionMatrix((number-1),((colth+1))) == AllMilitraryUnits(helpme,3)
                        switch AllMilitraryUnits(helpme,1)
                            case "Soldier"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*23)+1;
                                    RandomDefeat = round(rand*5);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end   
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*14)+2;
                                    RandomDefeat = round(rand*7);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*19)+1;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                               %If the enemy unit dies, remove it
                                    %health of attacked unit
                                    if true(HealthDefender <= 75 && HealthDefender > 50)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 25) 
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 25 && HealthDefender > 0)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number-1),2) == 0
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Cannon"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*6)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*15)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                       case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*14)+5;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %If the enemy unit dies, remove it
                                    %Health of attacked unit
                                    if true(HealthDefender <= 56 && HealthDefender > 38)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 38 && HealthDefender > 19) 
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 19 && HealthDefender > 0)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number-1),2) == 0
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Tank"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*20)+10;
                                    RandomDefeat = round(rand*10);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*30)+12;
                                    RandomDefeat = round(rand*12);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*20)+5;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number-1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %Health of attacked unit
                                if true(HealthDefender <= 150 && HealthDefender > 100)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 100 && HealthDefender > 50) 
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 0)
                                     if mod((number-1),2) == 0
                                       map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number-1),2) == 0
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number-1) - (((number-1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number-1) - (((number-1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number-1) - (((number-1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number-1) - (((number-1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number-1) - (((number-1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number-1) - (((number-1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                end
                        end
                        break;
                      end
                  end
                  fprintf('\nUnit attacked in %s, %d damaged given and %d damage taken.\n',PositionMatrix((number-1),((colth+1))), RandomAttack, RandomDefeat)
                  TerritoryMatrix = TerritoryMatrix;
                  OccupyMatrix = OccupyMatrix;
               return;   
              otherwise
              end
              NewRow = (number - 1);
              NewCol = (colth + 1);
              MilitaryMatrix(i,3) = PositionMatrix(NewRow,NewCol);
              PrevWater = 1;
              OccupyMatrix(NewRow,NewCol) = nation;
              OccupyMatrix(number,colth) = 0; 
              if ~isnan(TerritoryMatrix(number,colth))
                  PrevWater = 0;
              end
              if ~isnan(TerritoryMatrix(NewRow,NewCol))
                TerritoryMatrix(NewRow,NewCol) = nation;
              else
                  water = 1;
              end
              PrevCity = 0;
              if (NameMatrix(number,colth)) ~= ""
                  PrevCity = 1;
              end
              city = 0;
              if (NameMatrix(NewRow,NewCol)) ~= ""
                 city = 1;
              end
              if (mod(NewRow,2)) == 0
                  %Generate unit sprite
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((21 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):2:(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(23 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];  
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((25 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(23 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];
                  map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):6:(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(22 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour];
                  map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0)
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(26 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):5:(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((28 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):3:(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                        case "Tank"
                          map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((24 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                    end 
                    elseif (water == 0) && (city == 1)
                     %Unit does not show up over city
                end
                %Remove old unit sprite plus some terrain damage
                if (PrevWater == 1)
                  map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue];
                  map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):2:(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(23 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];  
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((25 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured(((21 + 16*(number - ((number/2)+0.5))):(23 + 16*(number - ((number/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [blue;blue;blue];
                  map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):6:(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(22 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue];
                  map_coloured((27 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    map_coloured((23 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((27 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((28 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((20) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 6
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 7
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((27) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 9
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 10
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((28) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 11
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((23) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 12
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((26) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured((((24) + 16*(number - ((number/2)+0.5))):((25) + 16*(number - ((number/2)+0.5)))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured((((23) + 16*(number - ((number/2)+0.5))):2:((26) + 16*(number - ((number/2)+0.5)))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              elseif (mod(NewRow,2))== 1
                  %Spawn unit sprites on inbetween tiles
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 33) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 33 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((29 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):2:(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(31 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];  
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((33 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(31 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];
                  map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):6:(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(30 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour];
                  map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0) 
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(34 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):5:(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((36 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):3:(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                        case "Tank"
                          map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((32 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                    end
                elseif (water == 0) && (city == 1)
                    %Unit is not displayed over city
                end
                %Remove old unit sprites on inbetween tiles
                if (PrevWater == 1)
                  map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue];
                  map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):2:(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(31 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];  
                  map_coloured((30 + 16*(number - ((number/2)+1))),((33 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured(((29 + 16*(number - ((number/2)+1))):(31 + 16*(number - ((number/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [blue;blue;blue];
                  map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):6:(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(30 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue];
                  map_coloured((35 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    map_coloured((31 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((35 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((36 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((28) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 6
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 7
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((35) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 9
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 10
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((36) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 11
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((31) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 12
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((34) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((33) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured((((32) + 16*(number - ((number/2)+1))):((33) + 16*(number - ((number/2)+1)))),((29+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured((((31) + 16*(number - ((number/2)+1))):2:((34) + 16*(number - ((number/2)+1)))),((28+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              end
         end
      case {'A', 'a', 'left', 'Left', 'LEFT'}
        switch (MilitaryMatrix(i,3))
              case {"1A" "2B" "3A" "4B" "5A" "6B" "7A" "8B" "9A" "10B" "11A" "12B" "13A" "14B" "15A" "16B" "17A" "18B" "19A" "20B" "21A" "22B" "23A" "24B" "25A" "26B" "27A" "28B" "29A"}
              fprintf('Invalid movement entry so movement wasted.\n');
              otherwise
              switch (OccupyMatrix((number),(colth-2)))
              case {nation}
                fprintf('Invalid movement entry so movement wasted, tile occupied.\n');
                return;
              case {FL,FK,FJ} 
                  for helpme = 1:size(AllMilitraryUnits,1)
                      if PositionMatrix((number),((colth-2))) == AllMilitraryUnits(helpme,3)
                        switch AllMilitraryUnits(helpme,1)
                            case "Soldier"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*23)+1;
                                    RandomDefeat = round(rand*5);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth-2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end   
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*14)+2;
                                    RandomDefeat = round(rand*7);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth-2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*19)+1;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth-2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                               %If the enemy unit dies, remove it
                                    %health of attacked unit
                                    if true(HealthDefender <= 75 && HealthDefender > 50)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 25) 
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 25 && HealthDefender > 0)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth-2) - (((colth-2)/2)+0.5))):(27 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth-2) - (((colth-2)/2)+0.5))):(27 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth-2) - (((colth-2)/2)+1))):(35 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth-2) - (((colth-2)/2)+1))):(35 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Cannon"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*6)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth-2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*15)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth-2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*14)+5;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth-2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %If the enemy unit dies, remove it
                                    %Health of attacked unit
                                    if true(HealthDefender <= 56 && HealthDefender > 38)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 38 && HealthDefender > 19) 
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 19 && HealthDefender > 0)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth-2) - (((colth-2)/2)+0.5))):(27 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth-2) - (((colth-2)/2)+0.5))):(27 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth-2) - (((colth-2)/2)+1))):(35 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth-2) - (((colth-2)/2)+1))):(35 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Tank"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*20)+10;
                                    RandomDefeat = round(rand*10);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth-2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*30)+12;
                                    RandomDefeat = round(rand*12);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth-2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*20)+5;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth-2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth-2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %Health of attacked unit
                                if true(HealthDefender <= 150 && HealthDefender > 100)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 100 && HealthDefender > 50) 
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 0)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth-2) - (((colth-2)/2)+0.5))):(26 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth-2) - (((colth-2)/2)+0.5))):(27 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth-2) - (((colth-2)/2)+0.5))):(28 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth-2) - (((colth-2)/2)+0.5))):(27 + 16*((colth-2) - (((colth-2)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth-2) - (((colth-2)/2)+1))):(34 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth-2) - (((colth-2)/2)+1))):(35 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth-2) - (((colth-2)/2)+1))):(36 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth-2) - (((colth-2)/2)+1))):(35 + 16*((colth-2) - (((colth-2)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                end
                        end
                        break;
                      end
                  end
                  fprintf('\nUnit attacked in %s, %d damaged given and %d damage taken.\n',PositionMatrix((number),((colth-2))), RandomAttack, RandomDefeat)
                  TerritoryMatrix = TerritoryMatrix;
                  OccupyMatrix = OccupyMatrix;
               return;   
              otherwise
              end  
              NewRow = (number);
              NewCol = (colth - 2);
              MilitaryMatrix(i,3) = PositionMatrix(NewRow,NewCol);
              PrevWater = 1;
              OccupyMatrix(NewRow,NewCol) = nation;
              OccupyMatrix(number,colth) = 0; 
              if ~isnan(TerritoryMatrix(number,colth))
                  PrevWater = 0;
              end
              if ~isnan(TerritoryMatrix(NewRow,NewCol))
                TerritoryMatrix(NewRow,NewCol) = nation;
              else
                  water = 1;
              end
              PrevCity = 0;
              if (NameMatrix(number,colth)) ~= ""
                  PrevCity = 1;
              end
              city = 0;
              if (NameMatrix(NewRow,NewCol)) ~= ""
                 city = 1;
              end
              if (mod(NewRow,2)) == 0
                  %Generate unit sprite
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((21 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):2:(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(23 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];  
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((25 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(23 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];
                  map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):6:(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(22 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour];
                  map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0)
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(26 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):5:(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((28 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):3:(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                        case "Tank"
                          map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((24 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                    end 
                    elseif (water == 0) && (city == 1)
                     %Unit does not show up over city
                end
                %Remove old unit sprite plus some terrain damage
                if (PrevWater == 1)
                  map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue];
                  map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):2:(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(23 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];  
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((25 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured(((21 + 16*(number - ((number/2)+0.5))):(23 + 16*(number - ((number/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [blue;blue;blue];
                  map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):6:(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(22 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue];
                  map_coloured((27 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    map_coloured((23 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((27 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((28 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((20) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 6
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 7
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((27) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 9
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 10
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((28) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 11
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((23) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 12
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((26) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured((((24) + 16*(number - ((number/2)+0.5))):((25) + 16*(number - ((number/2)+0.5)))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured((((23) + 16*(number - ((number/2)+0.5))):2:((26) + 16*(number - ((number/2)+0.5)))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              elseif (mod(NewRow,2))== 1
                  %Spawn unit sprites on inbetween tiles
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 33) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 33 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((29 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):2:(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(31 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];  
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((33 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(31 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];
                  map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):6:(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(30 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour];
                  map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0) 
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(34 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):5:(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((36 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):3:(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                        case "Tank"
                          map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((32 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                    end
                elseif (water == 0) && (city == 1)
                    %Unit is not displayed over city
                end
                %Remove old unit sprites on inbetween tiles
                if (PrevWater == 1)
                  map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue];
                  map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):2:(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(31 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];  
                  map_coloured((30 + 16*(number - ((number/2)+1))),((33 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured(((29 + 16*(number - ((number/2)+1))):(31 + 16*(number - ((number/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [blue;blue;blue];
                  map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):6:(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(30 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue];
                  map_coloured((35 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    map_coloured((31 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((35 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((36 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((28) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 6
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 7
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((35) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 9
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 10
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((36) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 11
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((31) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 12
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((34) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((33) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured((((32) + 16*(number - ((number/2)+1))):((33) + 16*(number - ((number/2)+1)))),((29+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured((((31) + 16*(number - ((number/2)+1))):2:((34) + 16*(number - ((number/2)+1)))),((28+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              end
        end  
      case {'z', 'Z', 'Zee'}
          switch (MilitaryMatrix(i,3))
              case {"1A"  "3A"  "5A"  "7A"  "9A"  "11A"  "13A"  "15A"  "17A" "19A" "21A" "23A"  "25A"  "27A"  "29A" "29C"  "29E"  "29G" "29I"  "29K"  "29M"  "29O"  "29Q"  "29S"  "29U"  "29W"}
              fprintf('Invalid movement entry so movement wasted.\n');
              otherwise
              switch (OccupyMatrix((number+1),(colth-1)))
              case {nation}
                fprintf('Invalid movement entry so movement wasted, tile occupied.\n');
                return;
              case {FL,FK,FJ} 
                  for helpme = 1:size(AllMilitraryUnits,1)
                      if PositionMatrix((number+1),((colth-1))) == AllMilitraryUnits(helpme,3)
                        switch AllMilitraryUnits(helpme,1)
                            case "Soldier"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*23)+1;
                                    RandomDefeat = round(rand*5);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end   
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*14)+2;
                                    RandomDefeat = round(rand*7);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*19)+1;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                               %If the enemy unit dies, remove it
                                    %health of attacked unit
                                    if true(HealthDefender <= 75 && HealthDefender > 50)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 25) 
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 25 && HealthDefender > 0)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number+1),2) == 0
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Cannon"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*6)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*15)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*14)+5;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %If the enemy unit dies, remove it
                                    %Health of attacked unit
                                    if true(HealthDefender <= 56 && HealthDefender > 38)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 38 && HealthDefender > 19) 
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 19 && HealthDefender > 0)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number+1),2) == 0
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Tank"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*20)+10;
                                    RandomDefeat = round(rand*10);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*30)+12;
                                    RandomDefeat = round(rand*12);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*20)+5;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth-1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %Health of attacked unit
                                if true(HealthDefender <= 150 && HealthDefender > 100)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 100 && HealthDefender > 50) 
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 0)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number+1),2) == 0
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth-1) - (((colth-1)/2)+0.5))):(26 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth-1) - (((colth-1)/2)+0.5))):(28 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth-1) - (((colth-1)/2)+0.5))):(27 + 16*((colth-1) - (((colth-1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth-1) - (((colth-1)/2)+1))):(34 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth-1) - (((colth-1)/2)+1))):(36 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth-1) - (((colth-1)/2)+1))):(35 + 16*((colth-1) - (((colth-1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                end
                        end
                        break;
                      end
                  end
                  fprintf('\nUnit attacked in %s, %d damaged given and %d damage taken.\n',PositionMatrix((number+1),((colth-1))), RandomAttack, RandomDefeat)
                  TerritoryMatrix = TerritoryMatrix;
                  OccupyMatrix = OccupyMatrix;
               return;   
              otherwise
              end     
              NewRow = (number + 1);
              NewCol = (colth - 1);
              MilitaryMatrix(i,3) = PositionMatrix(NewRow,NewCol);
              PrevWater = 1;
              OccupyMatrix(NewRow,NewCol) = nation;
              OccupyMatrix(number,colth) = 0;  
              if ~isnan(TerritoryMatrix(number,colth))
                  PrevWater = 0;
              end
              if ~isnan(TerritoryMatrix(NewRow,NewCol))
                TerritoryMatrix(NewRow,NewCol) = nation;
              else
                  water = 1;
              end
              PrevCity = 0;
              if (NameMatrix(number,colth)) ~= ""
                  PrevCity = 1;
              end
              city = 0;
              if (NameMatrix(NewRow,NewCol)) ~= ""
                 city = 1;
              end
              if (mod(NewRow,2)) == 0
                  %Generate unit sprite
               if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((21 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):2:(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(23 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];  
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((25 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(23 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];
                  map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):6:(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(22 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour];
                  map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0)
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(26 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):5:(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((28 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):3:(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                        case "Tank"
                          map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((24 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                    end 
                    elseif (water == 0) && (city == 1)
                     %Unit does not show up over city
                end
                %Remove old unit sprite plus some terrain damage
                if (PrevWater == 1)
                  map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue];
                  map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):2:(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(23 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];  
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((25 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured(((21 + 16*(number - ((number/2)+0.5))):(23 + 16*(number - ((number/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [blue;blue;blue];
                  map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):6:(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(22 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue];
                  map_coloured((27 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    map_coloured((23 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((27 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((28 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((20) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 6
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 7
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((27) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 9
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 10
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((28) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 11
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((23) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 12
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((26) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured((((24) + 16*(number - ((number/2)+0.5))):((25) + 16*(number - ((number/2)+0.5)))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured((((23) + 16*(number - ((number/2)+0.5))):2:((26) + 16*(number - ((number/2)+0.5)))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              elseif (mod(NewRow,2))== 1
                  %Spawn unit sprites on inbetween tiles
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 33) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 33 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((29 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):2:(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(31 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];  
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((33 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(31 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];
                  map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):6:(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(30 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour];
                  map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0) 
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(34 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):5:(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((36 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):3:(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                        case "Tank"
                          map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((32 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                    end
                elseif (water == 0) && (city == 1)
                    %Unit is not displayed over city
                end
                %Remove old unit sprites on inbetween tiles
                if (PrevWater == 1)
                  map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue];
                  map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):2:(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(31 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];  
                  map_coloured((30 + 16*(number - ((number/2)+1))),((33 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured(((29 + 16*(number - ((number/2)+1))):(31 + 16*(number - ((number/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [blue;blue;blue];
                  map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):6:(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(30 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue];
                  map_coloured((35 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    map_coloured((31 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((35 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((36 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((28) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 6
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 7
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((35) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 9
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 10
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((36) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 11
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((31) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 12
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((34) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((33) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured((((32) + 16*(number - ((number/2)+1))):((33) + 16*(number - ((number/2)+1)))),((29+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured((((31) + 16*(number - ((number/2)+1))):2:((34) + 16*(number - ((number/2)+1)))),((28+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              end
          end
      case {'d', 'D', 'Dee', 'right', 'RIGHT', 'Right'}
         switch (MilitaryMatrix(i,3))
              case {"1W" "2V" "3W" "4V" "5W" "6V" "7W" "8V" "9W" "10V" "11W" "12V" "13W" "14V" "15W" "16V" "17W" "18V" "19W" "20V" "21W" "22V" "23W" "24V" "25W" "26V" "27W" "28V" "29W"}
              fprintf('Invalid movement entry so movement wasted.\n');
              otherwise
              switch (OccupyMatrix((number),(colth+2)))
              case {nation}
                fprintf('Invalid movement entry so movement wasted, tile occupied.\n');
                return;
              case {FL,FK,FJ} 
                  for helpme = 1:size(AllMilitraryUnits,1)
                      if PositionMatrix((number),((colth+2))) == AllMilitraryUnits(helpme,3)
                        switch AllMilitraryUnits(helpme,1)
                            case "Soldier"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*23)+1;
                                    RandomDefeat = round(rand*5);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth+2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end   
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*14)+2;
                                    RandomDefeat = round(rand*7);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth+2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*19)+1;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth+2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                               %If the enemy unit dies, remove it
                                    %health of attacked unit
                                    if true(HealthDefender <= 75 && HealthDefender > 50)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 25) 
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 25 && HealthDefender > 0)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth+2) - (((colth+2)/2)+0.5))):(27 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth+2) - (((colth+2)/2)+0.5))):(27 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth+2) - (((colth+2)/2)+1))):(35 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth+2) - (((colth+2)/2)+1))):(35 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Cannon"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*6)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth+2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*15)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth+2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*14)+5;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth+2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %If the enemy unit dies, remove it
                                    %Health of attacked unit
                                    if true(HealthDefender <= 56 && HealthDefender > 38)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 38 && HealthDefender > 19) 
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 19 && HealthDefender > 0)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth+2) - (((colth+2)/2)+0.5))):(27 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth+2) - (((colth+2)/2)+0.5))):(27 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth+2) - (((colth+2)/2)+1))):(35 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth+2) - (((colth+2)/2)+1))):(35 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Tank"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*20)+10;
                                    RandomDefeat = round(rand*10);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth+2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*30)+12;
                                    RandomDefeat = round(rand*12);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth+2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*20)+5;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number),((colth+2))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number),((colth+2))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %Health of attacked unit
                                if true(HealthDefender <= 150 && HealthDefender > 100)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 100 && HealthDefender > 50) 
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 0)
                                     if mod((number),2) == 0
                                       map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*((colth+2) - (((colth+2)/2)+0.5))):(26 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth+2) - (((colth+2)/2)+0.5))):(27 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*((colth+2) - (((colth+2)/2)+0.5))):(28 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*((colth+2) - (((colth+2)/2)+0.5))):(27 + 16*((colth+2) - (((colth+2)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*((colth+2) - (((colth+2)/2)+1))):(34 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth+2) - (((colth+2)/2)+1))):(35 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*((colth+2) - (((colth+2)/2)+1))):(36 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*((colth+2) - (((colth+2)/2)+1))):(35 + 16*((colth+2) - (((colth+2)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                end
                        end
                        break;
                      end
                  end
                  fprintf('\nUnit attacked in %s, %d damaged given and %d damage taken.\n',PositionMatrix((number),((colth+2))), RandomAttack, RandomDefeat)
                  TerritoryMatrix = TerritoryMatrix;
                  OccupyMatrix = OccupyMatrix;
               return;   
              otherwise
              end  
              NewRow = (number);
              NewCol = (colth + 2);
              MilitaryMatrix(i,3) = PositionMatrix(NewRow,NewCol);
              PrevWater = 1;
              OccupyMatrix(NewRow,NewCol) = nation;
              OccupyMatrix(number,colth) = 0;  
              if ~isnan(TerritoryMatrix(number,colth))
                  PrevWater = 0;
              end
              if ~isnan(TerritoryMatrix(NewRow,NewCol))
                TerritoryMatrix(NewRow,NewCol) = nation;
              else
                  water = 1;
              end
              PrevCity = 0;
              if (NameMatrix(number,colth)) ~= ""
                  PrevCity = 1;
              end
              city = 0;
              if (NameMatrix(NewRow,NewCol)) ~= ""
                 city = 1;
              end
              if (mod(NewRow,2)) == 0
                  %Generate unit sprite
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((21 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):2:(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(23 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];  
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((25 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(23 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];
                  map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):6:(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(22 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour];
                  map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0)
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(26 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):5:(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((28 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):3:(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                        case "Tank"
                          map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((24 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                    end 
                    elseif (water == 0) && (city == 1)
                     %Unit does not show up over city
                end
                %Remove old unit sprite plus some terrain damage
                if (PrevWater == 1)
                  map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue];
                  map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):2:(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(23 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];  
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((25 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured(((21 + 16*(number - ((number/2)+0.5))):(23 + 16*(number - ((number/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [blue;blue;blue];
                  map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):6:(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(22 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue];
                  map_coloured((27 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    map_coloured((23 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((27 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((28 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((20) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 6
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 7
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((27) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 9
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 10
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((28) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 11
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((23) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 12
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((26) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured((((24) + 16*(number - ((number/2)+0.5))):((25) + 16*(number - ((number/2)+0.5)))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured((((23) + 16*(number - ((number/2)+0.5))):2:((26) + 16*(number - ((number/2)+0.5)))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              elseif (mod(NewRow,2))== 1
                  %Spawn unit sprites on inbetween tiles
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 33) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 33 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((29 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):2:(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(31 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];  
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((33 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(31 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];
                  map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):6:(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(30 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour];
                  map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0) 
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(34 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):5:(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((36 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):3:(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                        case "Tank"
                          map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((32 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                    end
                elseif (water == 0) && (city == 1)
                    %Unit is not displayed over city
                end
                %Remove old unit sprites on inbetween tiles
                if (PrevWater == 1)
                  map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue];
                  map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):2:(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(31 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];  
                  map_coloured((30 + 16*(number - ((number/2)+1))),((33 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured(((29 + 16*(number - ((number/2)+1))):(31 + 16*(number - ((number/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [blue;blue;blue];
                  map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):6:(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(30 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue];
                  map_coloured((35 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    map_coloured((31 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((35 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((36 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((28) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 6
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 7
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((35) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 9
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 10
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((36) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 11
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((31) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 12
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((34) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((33) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured((((32) + 16*(number - ((number/2)+1))):((33) + 16*(number - ((number/2)+1)))),((29+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured((((31) + 16*(number - ((number/2)+1))):2:((34) + 16*(number - ((number/2)+1)))),((28+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              end
          end    
      case {'c', 'C', 'Cee'}
         switch (MilitaryMatrix(i,3))
              case {"1W" "3W" "5W"  "7W"  "9W"  "11W"  "13W"  "15W"  "17W"  "19W" "21W"  "23W"  "25W"  "27W" "29W" "29A" "29C" "29E"  "29G"  "29I"  "29K"  "29M" "29O" "29Q"  "29S"  "29U"}
              fprintf('Invalid movement entry so movement wasted.\n');
              otherwise
              switch (OccupyMatrix((number+1),(colth+1)))
              case {nation}
                fprintf('Invalid movement entry so movement wasted, tile occupied.\n');
                return;
              case {FL,FK,FJ} 
                  for helpme = 1:size(AllMilitraryUnits,1)
                      if PositionMatrix((number+1),((colth+1))) == AllMilitraryUnits(helpme,3)
                        switch AllMilitraryUnits(helpme,1)
                            case "Soldier"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*23)+1;
                                    RandomDefeat = round(rand*5);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end   
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*14)+2;
                                    RandomDefeat = round(rand*7);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*19)+1;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                               %If the enemy unit dies, remove it
                                    %health of attacked unit
                                    if true(HealthDefender <= 75 && HealthDefender > 50)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 25) 
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 25 && HealthDefender > 0)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number+1),2) == 0
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Cannon"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*6)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*15)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*14)+5;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %If the enemy unit dies, remove it
                                    %Health of attacked unit
                                    if true(HealthDefender <= 56 && HealthDefender > 38)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 38 && HealthDefender > 19) 
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 19 && HealthDefender > 0)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number+1),2) == 0
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Tank"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*20)+10;
                                    RandomDefeat = round(rand*10);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*30)+12;
                                    RandomDefeat = round(rand*12);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*20)+5;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+1),((colth+1))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %Health of attacked unit
                                if true(HealthDefender <= 150 && HealthDefender > 100)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 100 && HealthDefender > 50) 
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 0)
                                     if mod((number+1),2) == 0
                                       map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number+1),2) == 0
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number+1) - (((number+1)/2)+0.5))),((23 + 16*((colth+1) - (((colth+1)/2)+0.5))):(26 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number+1) - (((number+1)/2)+0.5))),((21 + 16*((colth+1) - (((colth+1)/2)+0.5))):(28 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number+1) - (((number+1)/2)+0.5))),((22 + 16*((colth+1) - (((colth+1)/2)+0.5))):(27 + 16*((colth+1) - (((colth+1)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number+1) - (((number+1)/2)+1))),((31 + 16*((colth+1) - (((colth+1)/2)+1))):(34 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number+1) - (((number+1)/2)+1))),((29 + 16*((colth+1) - (((colth+1)/2)+1))):(36 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number+1) - (((number+1)/2)+1))),((30 + 16*((colth+1) - (((colth+1)/2)+1))):(35 + 16*((colth+1) - (((colth+1)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                end
                        end
                        break;
                      end
                  end
                  fprintf('\nUnit attacked in %s, %d damaged given and %d damage taken.\n',PositionMatrix((number+1),((colth+1))), RandomAttack, RandomDefeat)
                  TerritoryMatrix = TerritoryMatrix;
                  OccupyMatrix = OccupyMatrix;
               return;   
              otherwise
              end
              NewRow = (number + 1);
              NewCol = (colth + 1);
              MilitaryMatrix(i,3) = PositionMatrix(NewRow,NewCol);
              PrevWater = 1;
              OccupyMatrix(NewRow,NewCol) = nation;
              OccupyMatrix(number,colth) = 0; 
              if ~isnan(TerritoryMatrix(number,colth))
                  PrevWater = 0;
              end
              if ~isnan(TerritoryMatrix(NewRow,NewCol))
                TerritoryMatrix(NewRow,NewCol) = nation;
              else
                  water = 1;
              end
              PrevCity = 0;
              if (NameMatrix(number,colth)) ~= ""
                  PrevCity = 1;
              end
              city = 0;
              if (NameMatrix(NewRow,NewCol)) ~= ""
                 city = 1;
              end
              if (mod(NewRow,2))==0
                  %Generate unit sprite
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((21 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):2:(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(23 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];  
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((25 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour];
                  map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(23 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];
                  map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):6:(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(22 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [colour;colour;colour];
                  map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0)
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(26 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(NewCol - ((NewCol/2)+0.5))),:)= [black;black;black];  
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):5:(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((28 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):3:(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                        case "Tank"
                          map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((24 + 16*(NewCol - ((NewCol/2)+0.5))):(25 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [black;black;black;black;black;black];
                    end 
                    elseif (water == 0) && (city == 1)
                     %Unit does not show up over city
                end
                %Remove old unit sprite plus some terrain damage
                if (PrevWater == 1)
                  map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue];
                  map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):2:(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(23 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];  
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((25 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured(((21 + 16*(number - ((number/2)+0.5))):(23 + 16*(number - ((number/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [blue;blue;blue];
                  map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):6:(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(22 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue];
                  map_coloured((27 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    map_coloured((23 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((27 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((28 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((20) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 6
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 7
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((27) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 9
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 10
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((28) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 11
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((23) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 12
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((26) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured((((24) + 16*(number - ((number/2)+0.5))):((25) + 16*(number - ((number/2)+0.5)))),((21+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured((((23) + 16*(number - ((number/2)+0.5))):2:((26) + 16*(number - ((number/2)+0.5)))),((20+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              elseif(mod(NewRow,2)) == 1
                  %Spawn unit sprites on inbetween tiles
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 33) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 33 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((29 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):2:(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(31 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];  
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((33 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour];
                  map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(31 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];
                  map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):6:(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(30 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [colour;colour;colour];
                  map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0) 
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(34 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(NewCol - ((NewCol/2)+1))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(NewCol - ((NewCol/2)+1))),:)= [black;black;black];  
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):5:(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((36 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):3:(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                        case "Tank"
                          map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((32 + 16*(NewCol - ((NewCol/2)+1))):(33 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [black;black;black;black;black;black];
                    end
                elseif (water == 0) && (city == 1)
                    %Unit is not displayed over city
                end
                %Remove old unit sprites on inbetween tiles
                if (PrevWater == 1)
                  map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue];
                  map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):2:(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(31 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];  
                  map_coloured((30 + 16*(number - ((number/2)+1))),((33 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured(((29 + 16*(number - ((number/2)+1))):(31 + 16*(number - ((number/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [blue;blue;blue];
                  map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):6:(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(30 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue];
                  map_coloured((35 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    map_coloured((31 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((35 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((36 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((28) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 6
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 7
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((35) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 9
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 10
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((36) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 11
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((31) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 12
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((34) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((33) + 16*(number - ((number/2)+1))),((29+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured((((32) + 16*(number - ((number/2)+1))):((33) + 16*(number - ((number/2)+1)))),((29+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((28+damage) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured((((31) + 16*(number - ((number/2)+1))):2:((34) + 16*(number - ((number/2)+1)))),((28+damage) + 16*(colth - ((colth/2)+0.5))),:)= [brown;brown];
                                end
                            end
                    end
                end
              end
          end    
      case {'x', 'X', 'down', 'DOWN', 'Down'}  
          switch (MilitaryMatrix(i,3))
              case {"29A" "28B" "29C" "28D" "29E" "28F" "29G" "28H" "29I" "28J" "29K" "28L" "29M" "28N" "29O" "28P" "29Q" "28R" "29S" "28T" "29U" "28V" "29W"}
              fprintf('Invalid movement entry so movement wasted.\n');
              otherwise 
              switch (OccupyMatrix((number+2),(colth)))
              case {nation}
                fprintf('Invalid movement entry so movement wasted, tile occupied.\n');
                return;
              case {FL,FK,FJ} 
                  for helpme = 1:size(AllMilitraryUnits,1)
                      if PositionMatrix((number+2),((colth))) == AllMilitraryUnits(helpme,3)
                        switch AllMilitraryUnits(helpme,1)
                            case "Soldier"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*23)+1;
                                    RandomDefeat = round(rand*5);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+2),((colth))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end   
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*14)+2;
                                    RandomDefeat = round(rand*7);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+2),((colth))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*19)+1;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <=150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+2),((colth))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                               %If the enemy unit dies, remove it
                                    %health of attacked unit
                                    if true(HealthDefender <= 75 && HealthDefender > 50)
                                     if mod((number+2),2) == 0
                                       map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 25) 
                                     if mod((number+2),2) == 0
                                       map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 25 && HealthDefender > 0)
                                     if mod((number+2),2) == 0
                                       map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number+2),2) == 0
                                      map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number+2) - (((number+2)/2)+0.5))),((22 + 16*((colth) - (((colth)/2)+0.5))):(27 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number+2) - (((number+2)/2)+0.5))),((22 + 16*((colth) - (((colth)/2)+0.5))):(27 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number+2) - (((number+2)/2)+1))),((30 + 16*((colth) - (((colth)/2)+1))):(35 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number+2) - (((number+2)/2)+1))),((30 + 16*((colth) - (((colth)/2)+1))):(35 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Cannon"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*6)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+2),((colth))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = HealthDefender; 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*15)+6;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+2),((colth))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*14)+5;
                                    RandomDefeat = 0;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+2),((colth))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %If the enemy unit dies, remove it
                                    %Health of attacked unit
                                    if true(HealthDefender <= 56 && HealthDefender > 38)
                                     if mod((number+2),2) == 0
                                       map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 38 && HealthDefender > 19) 
                                     if mod((number+2),2) == 0
                                       map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 19 && HealthDefender > 0)
                                     if mod((number+2),2) == 0
                                       map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number+2),2) == 0
                                      map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number+2) - (((number+2)/2)+0.5))),((22 + 16*((colth) - (((colth)/2)+0.5))):(27 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number+2) - (((number+2)/2)+0.5))),((22 + 16*((colth) - (((colth)/2)+0.5))):(27 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number+2) - (((number+2)/2)+1))),((30 + 16*((colth) - (((colth)/2)+1))):(35 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number+2) - (((number+2)/2)+1))),((30 + 16*((colth) - (((colth)/2)+1))):(35 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end
                            case "Tank"
                                if Unit_Type == "Soldier"
                                    RandomAttack = round(rand*20)+10;
                                    RandomDefeat = round(rand*10);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 75 && Unit_Health > 50)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+2),((colth))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Cannon"
                                    RandomAttack = round(rand*30)+12;
                                    RandomDefeat = round(rand*12);
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 56 && Unit_Health > 38)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+2),((colth))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                elseif Unit_Type == "Tank" 
                                    RandomAttack = round(rand*20)+5;
                                    RandomDefeat = round(rand*14)+2;
                                    HealthDefender = str2num(AllMilitraryUnits(helpme,2));
                                    HealthDefender = HealthDefender - RandomAttack;
                                    Unit_Health = Unit_Health - RandomDefeat;
                                    AllMilitraryUnits(helpme,2) = num2str(HealthDefender);
                                    MilitaryMatrix(i,2) = num2str(Unit_Health);
                                    if true(Unit_Health <= 150 && Unit_Health > 100)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                     if mod(number,2) == 0
                                       map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(Unit_Health <= 0)
                                     if mod((number),2) == 0
                                      map_coloured((29 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number) - (((number)/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number) - (((number)/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number) - (((number)/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number) - (((number)/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number) - (((number)/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number) - (((number)/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                    end 
                                    switch (AllMilitraryUnits(helpme,7)) 
                                        case "0"
                                            for kilme = 1:size(MilitaryMatrixX,1)
                                                if true(PositionMatrix((number+2),((colth))) == MilitaryMatrixX(kilme,3))
                                                   MilitaryMatrixX(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "1"
                                            for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if true(PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3))
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "2"
                                            if nation == 1
                                             for kilme = 1:size(Ai_MilitaryMatrix1,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix1(kilme,3)
                                                   Ai_MilitaryMatrix1(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "3"
                                            if true(nation == 2 || nation == 1)
                                             for kilme = 1:size(Ai_MilitaryMatrix2,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix2(kilme,3)
                                                   Ai_MilitaryMatrix2(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end
                                            else
                                              for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                             end  
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                        case "4"
                                            for kilme = 1:size(Ai_MilitaryMatrix3,1)
                                                if PositionMatrix((number+2),((colth))) == Ai_MilitaryMatrix3(kilme,3)
                                                   Ai_MilitaryMatrix3(kilme,2) = num2str(HealthDefender); 
                                                end
                                                break;
                                            end
                                            MilitaryMatrixX = MilitaryMatrixX;
                                            Ai_MilitaryMatrix1 = Ai_MilitaryMatrix1;
                                            Ai_MilitaryMatrix2 = Ai_MilitaryMatrix2;
                                            Ai_MilitaryMatrix3 = Ai_MilitaryMatrix3;
                                    end
                                end
                                %Health of attacked unit
                                if true(HealthDefender <= 150 && HealthDefender > 100)
                                     if mod((number+2),2) == 0
                                       map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     else
                                       map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     end
                                    elseif true(HealthDefender <= 100 && HealthDefender > 50) 
                                     if mod((number+2),2) == 0
                                       map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     else
                                       map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red ;red];
                                     end
                                    elseif true(HealthDefender <= 50 && HealthDefender > 0)
                                     if mod((number+2),2) == 0
                                       map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     else
                                       map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [0.06666666667,1,0;red; red ;red];
                                     end
                                    elseif true(HealthDefender <= 0)
                                     if mod((number+2),2) == 0
                                      map_coloured((29 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((number+2) - (((number+2)/2)+0.5))),((23 + 16*((colth) - (((colth)/2)+0.5))):(26 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((number+2) - (((number+2)/2)+0.5))),((22 + 16*((colth) - (((colth)/2)+0.5))):(27 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((number+2) - (((number+2)/2)+0.5))),((21 + 16*((colth) - (((colth)/2)+0.5))):(28 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((number+2) - (((number+2)/2)+0.5))),((22 + 16*((colth) - (((colth)/2)+0.5))):(27 + 16*((colth) - (((colth)/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                     else
                                      map_coloured((37 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((number+2) - (((number+2)/2)+1))),((31 + 16*((colth) - (((colth)/2)+1))):(34 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((number+2) - (((number+2)/2)+1))),((30 + 16*((colth) - (((colth)/2)+1))):(35 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((number+2) - (((number+2)/2)+1))),((29 + 16*((colth) - (((colth)/2)+1))):(36 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((number+2) - (((number+2)/2)+1))),((30 + 16*((colth) - (((colth)/2)+1))):(35 + 16*((colth) - (((colth)/2)+1)))),:)= [green;green;green;green;green;green];   
                                     end 
                                end
                        end
                        break;
                      end
                  end
                  fprintf('\nUnit attacked in %s, %d damaged given and %d damage taken.\n',PositionMatrix((number+2),((colth))), RandomAttack, RandomDefeat)
                  TerritoryMatrix = TerritoryMatrix;
                  OccupyMatrix = OccupyMatrix;
               return;   
              otherwise
              end  
              NewRow = (number + 2);
              NewCol = colth;
              MilitaryMatrix(i,3) = PositionMatrix(NewRow,colth);
              PrevWater = 1;
              OccupyMatrix(NewRow,colth) = nation;
              OccupyMatrix(number,colth) = 0;  
              if ~isnan(TerritoryMatrix(number,colth))
                  PrevWater = 0;
              end
              if ~isnan(TerritoryMatrix(NewRow,colth))
                TerritoryMatrix(NewRow,colth) = nation;
              else
                  water = 1;
              end
              PrevCity = 0;
              if (NameMatrix(number,colth)) ~= ""
                  PrevCity = 1;
              end
              city = 0;
              if (NameMatrix(NewRow,colth)) ~= ""
                 city = 1;
              end
              if (mod(NewRow,2)) == 0
                  %Generate unit sprite
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 25) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 25 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((29 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((21 + 16*((NewRow) - (((NewRow)/2)+0.5))),((23 + 16*(NewCol - ((NewCol/2)+0.5))):(26 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green];
                                      map_coloured((22 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];
                                      map_coloured((23 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((24 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((25 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((26 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((27 + 16*((NewRow) - (((NewRow)/2)+0.5))),((21 + 16*(NewCol - ((NewCol/2)+0.5))):(28 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((28 + 16*((NewRow) - (((NewRow)/2)+0.5))),((22 + 16*(NewCol - ((NewCol/2)+0.5))):(27 + 16*(NewCol - ((NewCol/2)+0.5)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((21 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):2:(25 + 16*(colth - ((colth/2)+0.5)))),:)= [colour;colour];
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(23 + 16*(colth - ((colth/2)+0.5)))),:)= [colour;colour];  
                  map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((25 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [colour;colour];
                  map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(23 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [black;black;black];
                  map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):6:(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                  map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(22 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                  map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [colour;colour;colour];
                  map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0)
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(colth - ((colth/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(22 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(colth - ((colth/2)+0.5))),:)= [colour;black];  
                          map_coloured(((21 + 16*(NewRow - ((NewRow/2)+0.5))):(26 + 16*(NewRow - ((NewRow/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(23 + 16*(colth - ((colth/2)+0.5))),:)= [black;black;black];  
                          map_coloured(((26 + 16*(NewRow - ((NewRow/2)+0.5))):(28 + 16*(NewRow - ((NewRow/2)+0.5)))),(25 + 16*(colth - ((colth/2)+0.5))),:)= [black;black;black];  
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black];  
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):5:(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((28 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):3:(26 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                        case "Tank"
                          map_coloured((22 + 16*(NewRow - ((NewRow/2)+0.5))),((24 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black];
                          map_coloured((23 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((25 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black];
                          map_coloured((24 + 16*(NewRow - ((NewRow/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [black;colour;colour;black];
                          map_coloured((26 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((27 + 16*(NewRow - ((NewRow/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [black;black;black;black;black;black];
                    end 
                    elseif (water == 0) && (city == 1)
                     %Unit does not show up over city
                end
                %Remove old unit sprite plus some terrain damage
                if (PrevWater == 1)
                  map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue];
                  map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):2:(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(23 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];  
                  map_coloured((22 + 16*(number - ((number/2)+0.5))),((25 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured(((21 + 16*(number - ((number/2)+0.5))):(23 + 16*(number - ((number/2)+0.5)))),(24 + 16*(colth - ((colth/2)+0.5))),:)= [blue;blue;blue];
                  map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):6:(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((25 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(22 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((26 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue];
                  map_coloured((26 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(25 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue];
                  map_coloured((27 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((29 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((21 + 16*(number - ((number/2)+0.5))),((23 + 16*(colth - ((colth/2)+0.5))):(26 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green];
                    map_coloured((22 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    map_coloured((23 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((24 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((25 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((26 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((27 + 16*(number - ((number/2)+0.5))),((21 + 16*(colth - ((colth/2)+0.5))):(28 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((28 + 16*(number - ((number/2)+0.5))),((22 + 16*(colth - ((colth/2)+0.5))):(27 + 16*(colth - ((colth/2)+0.5)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((20) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((22) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((23) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((21) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 6
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 7
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((24) + 16*(number - ((number/2)+0.5))),((27) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 9
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 10
                                        map_coloured(((26) + 16*(number - ((number/2)+0.5))),((28) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 11
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((23) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 12
                                        map_coloured(((27) + 16*(number - ((number/2)+0.5))),((26) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((22+damage) + 16*(number - ((number/2)+0.5))),((23) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((22+damage) + 16*(number - ((number/2)+0.5))),((24) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((22+damage) + 16*(number - ((number/2)+0.5))),(((23) + 16*(colth - ((colth/2)+0.5))):((24) + 16*(colth - ((colth/2)+0.5)))),:)= [brown;brown];
                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((20+damage) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 2
                                        map_coloured(((20+damage) + 16*(number - ((number/2)+0.5))),((22) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 3
                                        map_coloured(((20+damage) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 4
                                        map_coloured(((20+damage) + 16*(number - ((number/2)+0.5))),((25) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 5
                                        map_coloured(((20+damage) + 16*(number - ((number/2)+0.5))),(((22) + 16*(colth - ((colth/2)+0.5))):2:((25) + 16*(colth - ((colth/2)+0.5)))),:)= [brown;brown];
                                end
                            end
                    end
                end
              elseif (mod(NewRow,2))== 1
                  %Spawn unit sprites on inbetween tiles
                if Unit_Type == "Soldier"
                                    if true(Unit_Health <= 100 && Unit_Health > 75)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <= 75 && Unit_Health > 50)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 33) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 33 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                elseif Unit_Type == "Cannon"
                                    if true(Unit_Health <=75 && Unit_Health > 56)
                                        map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=56 && Unit_Health > 38)
                                    
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                     
                                    elseif true(Unit_Health <= 38 && Unit_Health > 19) 
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                     
                                    elseif true(Unit_Health <= 19 && Unit_Health > 0)
                                     
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                     
                                    elseif true(Unit_Health <= 0)
                                    
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                                    
                                   
                                elseif Unit_Type == "Tank" 
                                    if true(Unit_Health <=200 && Unit_Health > 150)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;0.06666666667,1,0];
                                    elseif true(Unit_Health <=150 && Unit_Health > 100)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; 0.06666666667,1,0;red];
                                    elseif true(Unit_Health <= 100 && Unit_Health > 50) 
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;0.06666666667,1,0; red;red];
                                    elseif true(Unit_Health <= 50 && Unit_Health > 0)
                                       map_coloured((37 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [0.06666666667,1,0;red; red;red];
                                    elseif true(Unit_Health <= 0)
                                      map_coloured((37 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((29 + 16*((NewRow) - (((NewRow)/2)+1))),((31 + 16*(NewCol - ((NewCol/2)+1))):(34 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green];
                                      map_coloured((30 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];
                                      map_coloured((31 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((32 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((33 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((34 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((35 + 16*((NewRow) - (((NewRow)/2)+1))),((29 + 16*(NewCol - ((NewCol/2)+1))):(36 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                                      map_coloured((36 + 16*((NewRow) - (((NewRow)/2)+1))),((30 + 16*(NewCol - ((NewCol/2)+1))):(35 + 16*(NewCol - ((NewCol/2)+1)))),:)= [green;green;green;green;green;green];   
                                    end
                end
                if (water == 1) && (city == 0)
                  map_coloured((29 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):2:(33 + 16*(colth - ((colth/2)+1)))),:)= [colour;colour];
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(31 + 16*(colth - ((colth/2)+1)))),:)= [colour;colour];  
                  map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((33 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [colour;colour];
                  map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(31 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [black;black;black];
                  map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(colth - ((colth/2)+1))):6:(35 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                  map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [colour;colour;colour;colour;colour];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(30 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                  map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [colour;colour;colour];
                  map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black];
                elseif (water == 0) && (city == 0) 
                    switch(MilitaryMatrix(i,1))
                        case "Soldier"
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(colth - ((colth/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(30 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(colth - ((colth/2)+1))),:)= [colour;black];  
                          map_coloured(((29 + 16*(NewRow - ((NewRow/2)+1))):(34 + 16*(NewRow - ((NewRow/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [colour;black;black;black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(31 + 16*(colth - ((colth/2)+1))),:)= [black;black;black];  
                          map_coloured(((34 + 16*(NewRow - ((NewRow/2)+1))):(36 + 16*(NewRow - ((NewRow/2)+1)))),(33 + 16*(colth - ((colth/2)+1))),:)= [black;black;black];  
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;colour;colour];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black];  
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black];  
                        case "Cannon"
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):5:(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black;black;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((36 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):3:(34 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                        case "Tank"
                          map_coloured((30 + 16*(NewRow - ((NewRow/2)+1))),((32 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [black;black];
                          map_coloured((31 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((33 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black];
                          map_coloured((32 + 16*(NewRow - ((NewRow/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [black;colour;colour;black];
                          map_coloured((34 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [black;grey;black;black;grey;black];
                          map_coloured((35 + 16*(NewRow - ((NewRow/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [black;black;black;black;black;black];
                    end
                elseif (water == 0) && (city == 1)
                    %Unit is not displayed over city
                end
                %Remove old unit sprites on inbetween tiles
                if (PrevWater == 1)
                  map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue];
                  map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):2:(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(31 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];  
                  map_coloured((30 + 16*(number - ((number/2)+1))),((33 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured(((29 + 16*(number - ((number/2)+1))):(31 + 16*(number - ((number/2)+1)))),(32 + 16*(colth - ((colth/2)+1))),:)= [blue;blue;blue];
                  map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue;blue;blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):6:(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((33 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(30 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((34 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue];
                  map_coloured((34 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(33 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue];
                  map_coloured((35 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [blue;blue;blue;blue;blue];
                elseif (PrevWater == 0) && (PrevCity == 1)
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                elseif (PrevWater == 0) && (PrevCity == 0) 
                    map_coloured((37 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((29 + 16*(number - ((number/2)+1))),((31 + 16*(colth - ((colth/2)+1))):(34 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green];
                    map_coloured((30 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    map_coloured((31 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((32 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((33 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((34 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((35 + 16*(number - ((number/2)+1))),((29 + 16*(colth - ((colth/2)+1))):(36 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green;green;green];
                    map_coloured((36 + 16*(number - ((number/2)+1))),((30 + 16*(colth - ((colth/2)+1))):(35 + 16*(colth - ((colth/2)+1)))),:)= [green;green;green;green;green;green];
                    %Terrain Damage
                    switch (MilitaryMatrix(i,1))
                        case "Soldier"
                            for damage = 1:5
                                GenerateRand = round(rand*1199);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((28) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((30) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((31) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((29) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 6
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 7
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+0.5))),:)= [brown];
                                    case 8
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((35) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 9
                                        map_coloured(((32) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 10
                                        map_coloured(((34) + 16*(number - ((number/2)+1))),((36) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 11
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((31) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 12
                                        map_coloured(((35) + 16*(number - ((number/2)+1))),((34) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                end
                            end
                        case "Cannon"
                            for damage = 1:5
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((30+damage) + 16*(number - ((number/2)+1))),((31) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((30+damage) + 16*(number - ((number/2)+1))),((32) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((30+damage) + 16*(number - ((number/2)+1))),(((31) + 16*(colth - ((colth/2)+1))):((32) + 16*(colth - ((colth/2)+1)))),:)= [brown; brown];
                                end
                            end
                        case "Tank"
                            for damage = 1:8
                                GenerateRand = round(rand*99);
                                switch (GenerateRand)
                                    case 1
                                        map_coloured(((28+damage) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 2
                                        map_coloured(((28+damage) + 16*(number - ((number/2)+1))),((30) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 3
                                        map_coloured(((28+damage) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 4
                                        map_coloured(((28+damage) + 16*(number - ((number/2)+1))),((33) + 16*(colth - ((colth/2)+1))),:)= [brown];
                                    case 5
                                        map_coloured(((28+damage) + 16*(number - ((number/2)+1))),(((30) + 16*(colth - ((colth/2)+1))):2:((33) + 16*(colth - ((colth/2)+1)))),:)= [brown;brown];
                                end
                            end
                    end
                end
              end
          end     
      case {'s', 'S', 'Stay', 'STAY', 'STOP', 'stop', 'dont', 'wait', 'WAIT', 'Stop', 'stay', 'Still', 'STILL'}
          TerritoryMatrix = TerritoryMatrix;
          MilitaryMatrix = MilitaryMatrix;
          map_coloured = map_coloured;   
          OccupyMatrix = OccupyMatrix;
      otherwise
          fprintf('Invalid movement entry so movement wasted.\n');
  end
  clear('number');
  clear('NewRow');
  clear('NewCol');
  clear('colth');
  clear('i');
  clear('Unit_local_matrix');
end